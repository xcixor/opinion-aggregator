# Generated by Django 2.2.8 on 2020-04-16 22:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': 'The email address you entered has already been registered.'}, max_length=255, unique=True, verbose_name='email address')),
                ('firstname', models.CharField(blank=True, max_length=40, verbose_name='firstname')),
                ('lastname', models.CharField(blank=True, max_length=40, verbose_name='lastname')),
                ('address', models.CharField(blank=True, max_length=100, verbose_name='address')),
                ('gender', models.CharField(blank=True, max_length=40, verbose_name='gender')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_joined')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='date_of_birth')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_change_allowed', models.BooleanField(default=False, help_text='Designates whether this user has been authorized to change his own password, in the change_password view.', verbose_name='change_allowed')),
                ('phone_number', models.IntegerField(blank=True, null=True)),
                ('emirates_id', models.IntegerField()),
                ('student_id', models.IntegerField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('change_email', models.EmailField(blank=True, default=None, error_messages={'unique': 'The email address you entered has already been registered.'}, max_length=255, null=True, unique=True, verbose_name='email address')),
                ('former_email', models.EmailField(blank=True, default=None, max_length=255, null=True, verbose_name='email address')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CountryCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code', models.IntegerField(default=971, unique=True)),
                ('country', models.CharField(default='UAE', max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='OptionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200, verbose_name='An answer to a question')),
            ],
            options={
                'verbose_name_plural': 'Options',
            },
        ),
        migrations.CreateModel(
            name='PartModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=40, verbose_name='Name of the part, eg Part A')),
                ('long_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='A more detailed description, e.g personal information')),
            ],
            options={
                'verbose_name_plural': 'Parts of a survey',
            },
        ),
        migrations.CreateModel(
            name='QuestionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=400, verbose_name='Description of the question')),
            ],
            options={
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='SurveyModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_description', models.CharField(max_length=40, unique=True, verbose_name='Short description of the survey, required')),
                ('long_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Long description of the survey, optional')),
            ],
            options={
                'verbose_name_plural': 'Surveys',
            },
        ),
        migrations.CreateModel(
            name='SurveyResponsesModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.CharField(max_length=255, verbose_name='User response to the question')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='opinion_aggregator.QuestionModel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Responses',
            },
        ),
        migrations.CreateModel(
            name='SectionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=40, verbose_name='Title of the section: eg personal info')),
                ('long_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Long description of this area')),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='opinion_aggregator.PartModel')),
            ],
            options={
                'verbose_name_plural': 'Sections of the survey',
                'unique_together': {('title', 'part')},
            },
        ),
        migrations.CreateModel(
            name='QuestionOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opinion_aggregator.OptionModel')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='opinion_aggregator.QuestionModel')),
            ],
            options={
                'verbose_name_plural': 'Question Options',
            },
        ),
        migrations.AddField(
            model_name='questionmodel',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='opinion_aggregator.SectionModel'),
        ),
        migrations.AddField(
            model_name='partmodel',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parts', to='opinion_aggregator.SurveyModel'),
        ),
        migrations.AddField(
            model_name='user',
            name='country_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='opinion_aggregator.CountryCode'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='questionmodel',
            unique_together={('description', 'section')},
        ),
        migrations.AlterUniqueTogether(
            name='partmodel',
            unique_together={('title', 'survey')},
        ),
    ]
